/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../pages/__root'
import { Route as ContactRouteImport } from './../../pages/contact'
import { Route as IndexRouteImport } from './../../pages/index'
import { Route as TagsIndexRouteImport } from './../../pages/tags/index'
import { Route as PostsIndexRouteImport } from './../../pages/posts/index'
import { Route as AdminIndexRouteImport } from './../../pages/admin/index'
import { Route as AboutIndexRouteImport } from './../../pages/about/index'
import { Route as TagsTagNameRouteImport } from './../../pages/tags/$tagName'
import { Route as PostsSlugRouteImport } from './../../pages/posts/$slug'
import { Route as AdminWriteRouteImport } from './../../pages/admin/write'
import { Route as AdminSettingsRouteImport } from './../../pages/admin/settings'
import { Route as AdminManageRouteImport } from './../../pages/admin/manage'
import { Route as AboutResumeRouteImport } from './../../pages/about/resume'

const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TagsIndexRoute = TagsIndexRouteImport.update({
  id: '/tags/',
  path: '/tags/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const TagsTagNameRoute = TagsTagNameRouteImport.update({
  id: '/tags/$tagName',
  path: '/tags/$tagName',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsSlugRoute = PostsSlugRouteImport.update({
  id: '/posts/$slug',
  path: '/posts/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminWriteRoute = AdminWriteRouteImport.update({
  id: '/admin/write',
  path: '/admin/write',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminManageRoute = AdminManageRouteImport.update({
  id: '/admin/manage',
  path: '/admin/manage',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutResumeRoute = AboutResumeRouteImport.update({
  id: '/about/resume',
  path: '/about/resume',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/about/resume': typeof AboutResumeRoute
  '/admin/manage': typeof AdminManageRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/write': typeof AdminWriteRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/tags/$tagName': typeof TagsTagNameRoute
  '/about': typeof AboutIndexRoute
  '/admin': typeof AdminIndexRoute
  '/posts': typeof PostsIndexRoute
  '/tags': typeof TagsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/about/resume': typeof AboutResumeRoute
  '/admin/manage': typeof AdminManageRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/write': typeof AdminWriteRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/tags/$tagName': typeof TagsTagNameRoute
  '/about': typeof AboutIndexRoute
  '/admin': typeof AdminIndexRoute
  '/posts': typeof PostsIndexRoute
  '/tags': typeof TagsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/about/resume': typeof AboutResumeRoute
  '/admin/manage': typeof AdminManageRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/write': typeof AdminWriteRoute
  '/posts/$slug': typeof PostsSlugRoute
  '/tags/$tagName': typeof TagsTagNameRoute
  '/about/': typeof AboutIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/tags/': typeof TagsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/contact'
    | '/about/resume'
    | '/admin/manage'
    | '/admin/settings'
    | '/admin/write'
    | '/posts/$slug'
    | '/tags/$tagName'
    | '/about'
    | '/admin'
    | '/posts'
    | '/tags'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/contact'
    | '/about/resume'
    | '/admin/manage'
    | '/admin/settings'
    | '/admin/write'
    | '/posts/$slug'
    | '/tags/$tagName'
    | '/about'
    | '/admin'
    | '/posts'
    | '/tags'
  id:
    | '__root__'
    | '/'
    | '/contact'
    | '/about/resume'
    | '/admin/manage'
    | '/admin/settings'
    | '/admin/write'
    | '/posts/$slug'
    | '/tags/$tagName'
    | '/about/'
    | '/admin/'
    | '/posts/'
    | '/tags/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactRoute: typeof ContactRoute
  AboutResumeRoute: typeof AboutResumeRoute
  AdminManageRoute: typeof AdminManageRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminWriteRoute: typeof AdminWriteRoute
  PostsSlugRoute: typeof PostsSlugRoute
  TagsTagNameRoute: typeof TagsTagNameRoute
  AboutIndexRoute: typeof AboutIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
  TagsIndexRoute: typeof TagsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tags/': {
      id: '/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tags/$tagName': {
      id: '/tags/$tagName'
      path: '/tags/$tagName'
      fullPath: '/tags/$tagName'
      preLoaderRoute: typeof TagsTagNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$slug': {
      id: '/posts/$slug'
      path: '/posts/$slug'
      fullPath: '/posts/$slug'
      preLoaderRoute: typeof PostsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/write': {
      id: '/admin/write'
      path: '/admin/write'
      fullPath: '/admin/write'
      preLoaderRoute: typeof AdminWriteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/manage': {
      id: '/admin/manage'
      path: '/admin/manage'
      fullPath: '/admin/manage'
      preLoaderRoute: typeof AdminManageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/resume': {
      id: '/about/resume'
      path: '/about/resume'
      fullPath: '/about/resume'
      preLoaderRoute: typeof AboutResumeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  AboutResumeRoute: AboutResumeRoute,
  AdminManageRoute: AdminManageRoute,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminWriteRoute: AdminWriteRoute,
  PostsSlugRoute: PostsSlugRoute,
  TagsTagNameRoute: TagsTagNameRoute,
  AboutIndexRoute: AboutIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
  TagsIndexRoute: TagsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
